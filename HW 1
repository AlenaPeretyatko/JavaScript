'number' + 3 + 3; // Оператор + в взаємодіє як конкатенація рядків.
number33

null + 3; // null - це спеціальне значення, яке = 0
3

5 && "qwerty"; // логічний оператор "І" повертає значення останнього істинного операнда
"qwerty"

+'40' + +'2' + "hillel"; // Унарний плюс перетворює рядки в числа
42hillel

'10' - 5 === 6; // Рядок '10' конвертується в число, і ми виконуємо віднімання. 10 - 5 = 5, 5 === 6 - порівнюємо
false

true + false; // true - 1, false - 0 
1

'4px' - 3; // В цьому виразі виникне помилка, оскільки рядок не можна відняти від числа
NaN

'4' - 3; // Рядок '4' конвертується в число, і ми виконуємо віднімання
1

'6' + 3 ** 0; // 3 ** 0 = 1. Рядок '6' конкатенується з числом 1
61

12 / '6'; // Рядок '6' конвертується в число, і ми виконуємо ділення
2

'10' + (5 === 6); // 5 === 6 - це булевий вираз, який повертає false
10false

null == ''; // null конвертується в 0, а '' конвертується в 0
true

3 ** (9 / 3); // Зведення в ступінь (**)
27

!!'false' == !!'true'; 
/* !!'false' - перетворення 'false' в булеве значення false
!!'true' - перетворення 'true' в булеве значення true
false == true - порівнюємо два булевих значення */
true

0 || '0' && 1; 
/* Оператор && має вищий пріоритет, тому спочатку виконується '0' && 1
Тепер застосуємо 0 || 1. Оператор || поверне перше істинне значення або останнє значення, якщо обидва - хибні */
1

(+null == false) < 1;
/* +null - перетворення null в число, яке дорівнює 0
0 == false - true (в контексті порівняння, конвертує false в число 0)
true < 1 - true (в контексті порівняння, true конвертується в число 1)*/
false

false && true || true 
/* Оператор && повертає перше хибне значення, результат буде false
Оператор || поверне перше істинне значення або останнє значення, якщо обидва - хибні, оскільки перше значення - false, він повертає друге значення - true */
true

false && (false || true); 
/* 
(false || true) У цьому випадку, оскільки перше значення - false, він повертає друге значення - true
Оператор && повертає перше хибне значення, оскільки один з операндів - false */
false

(+null == false) < 1 ** 5; 
/* 
+null - перетворення null в число, яке дорівнює 0
0 == false - true (в контексті порівняння, конвертує false в число 0)
1 ** 5 - 1 в ступені 5 = 1
true < 1 - true (в контексті порівняння, true конвертується в число 1) */
false
